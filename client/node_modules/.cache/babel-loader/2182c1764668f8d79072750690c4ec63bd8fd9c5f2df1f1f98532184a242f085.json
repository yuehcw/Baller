{"ast":null,"code":"var _jsxFileName = \"/Users/kevinwu/Desktop/Project/Baller/client/src/pages/MyTeamPage/MyTeamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PlayerGridList from \"../../components/PlayerList/PlayerGridList\";\nimport PlayerList from \"../../components/PlayerList/PlayerList\";\nimport SearchPlayers from \"../../components/SearchPlayer/SearchPlayers\";\nimport \"./MyTeamPage.css\";\nimport MyTeamToolbar from \"../../components/MyTeamToolbar/MyTeamToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTeamPage = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await axios.get(\"/nba/nba-top15Players\");\n        setPlayers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching players:\", error);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myteampage-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerGridList, {\n          title: \"Attackers\",\n          players: players.slice(0, 3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerGridList, {\n          title: \"Midfielders\",\n          players: players.slice(3, 6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerGridList, {\n          title: \"Defenders\",\n          players: players.slice(6, 9)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPlayers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n          players: players,\n          selectedPlayer: selectedPlayer,\n          setSelectedPlayer: setSelectedPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myteampage-toolbar\",\n      children: /*#__PURE__*/_jsxDEV(MyTeamToolbar, {\n        players: 17,\n        remainingBudget: 97.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTeamPage, \"YvgTxJwjylK5wJB3bRvAaY9Tfjo=\");\n_c = MyTeamPage;\nexport default MyTeamPage;\nvar _c;\n$RefreshReg$(_c, \"MyTeamPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","PlayerGridList","PlayerList","SearchPlayers","MyTeamToolbar","jsxDEV","_jsxDEV","MyTeamPage","_s","players","setPlayers","selectedPlayer","setSelectedPlayer","fetchPlayers","response","get","data","error","console","className","children","title","slice","fileName","_jsxFileName","lineNumber","columnNumber","remainingBudget","_c","$RefreshReg$"],"sources":["/Users/kevinwu/Desktop/Project/Baller/client/src/pages/MyTeamPage/MyTeamPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PlayerGridList from \"../../components/PlayerList/PlayerGridList\";\nimport PlayerList from \"../../components/PlayerList/PlayerList\";\nimport SearchPlayers from \"../../components/SearchPlayer/SearchPlayers\";\nimport \"./MyTeamPage.css\";\nimport MyTeamToolbar from \"../../components/MyTeamToolbar/MyTeamToolbar\";\n\nconst MyTeamPage = () => {\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await axios.get(\"/nba/nba-top15Players\");\n        setPlayers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching players:\", error);\n      }\n    };\n\n    fetchPlayers();\n  }, []);\n\n  return (\n    <div className=\"myteampage-content\">\n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <PlayerGridList title=\"Attackers\" players={players.slice(0, 3)} />\n          <PlayerGridList title=\"Midfielders\" players={players.slice(3, 6)} />\n          <PlayerGridList title=\"Defenders\" players={players.slice(6, 9)} />\n        </div>\n        <div className=\"right-panel\">\n          <SearchPlayers />\n          <PlayerList\n            players={players}\n            selectedPlayer={selectedPlayer}\n            setSelectedPlayer={setSelectedPlayer}\n          />\n        </div>\n      </div>\n      <div className=\"myteampage-toolbar\">\n        <MyTeamToolbar players={17} remainingBudget={97.5} />\n      </div>\n    </div>\n  );\n};\n\nexport default MyTeamPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}